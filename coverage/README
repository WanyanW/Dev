Notes:  /mnt/scratch/howead/howead/metat/map-to-genomes

Example:

You've got contigs:  allgenomes.fasta

You've got mapped reads (transcripts) to reference, which you've got a mapping file such as those generated by:

bowtie2-build allgenomes.fasta allgenomes.fasta
bowtie2 -x allgenomes.fasta -1 MetaT_raw_R1.fastq -2 MetaT_raw_R2.fastq -S metat_mapped_allgenomes.sam -p 4 

You've converted that to a sorted bam and then coverted files to bed:

Reference file --> bed:  python coverage-bed-reference.py All_MetaT_contigs_with_abundance.fa > All_MetaT_contigs_with_abundance.fa.bed

Bam file --> bed:  bamtobed and coverageBed -a metat_WVsB.bed -b All_MetaT_contigs_with_abundance.fa.bed -d > metatassembly_transcripts.bed

Now if you want coverage of everything, you can run:

Run bedcoverage-to-coverage.py or bedcoverage-to-coverage2.py based on whether or not annotation exist resulting in the following

==> metat.counts <==
AE000513_100030_100338 0.0 0.0 0 0 0 308 0.0
AE000513_1001875_1002834 0.0 0.0 0 0 0 959 0.0
AE000513_1003017_1004996 0.0 0.0 0 0 0 1979 0.0
AE000513_100371_100802 0.0 0.0 0 0 0 431 0.0
AE000513_1005049_1005768 0.0 0.0 0 0 0 719 0.0
AE000513_1005906_1006388 0.0 0.0 0 0 0 482 0.0
AE000513_1006525_1007055 0.0 0.0 0 0 0 530 0.0
AE000513_1007146_1007775 0.0 0.0 0 0 0 629 0.0
AE000513_1008232_1009407 0.0 0.0 0 0 0 1175 0.0
AE000513_1009495_1010844 0.0 0.0 0 0 0 1349 0.0

or you can run:  

python bedcoverage-to-coverage-specific-indexes.py list-of-contigs.txt metatassembly_transcripts.bed > foo

Where list-of-contigs.txt looks like:

list-of-contigs.txt:
143_1_334
224_1_251
240_1_327
327_1_267
372_1_341
481_1_433

You can filter results with:

python filter-coverage-by-min2-100bpcov.py [count file] [output file] 

